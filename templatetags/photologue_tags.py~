from django import template
import os
from django.template.defaultfilters import slugify

register = template.Library()

def admin_thumbnail(im):
    return '<a title="%s" href="%s"><img src="%s"/></a>' % (im.title, im.get_absolute_url(), im.get_admin_thumbnail_url())

def thumbnail(im):
    return '<a title="%s" href="%s"><img src="%s"/></a>' % (im.title, im.get_absolute_url(), im.get_thumbnail_url())
    
@register.simple_tag
def next_in_gallery(photo, gallery):
    next = photo.get_next_in_gallery(gallery)
    if next:
        return '<a title="%s" href="%s"><img src="%s"/></a>' % (next.title, next.get_absolute_url(), next.get_thumbnail_url())
    return ""
    
@register.simple_tag
def previous_in_gallery(photo, gallery):
    prev = photo.get_previous_in_gallery(gallery)
    if prev:
        return '<a title="%s" href="%s"><img src="%s"/></a>' % (prev.title, prev.get_absolute_url(), prev.get_thumbnail_url())
    return ""

@register.simple_tag
def next_n_in_gallery(photo, gallery, n):
    out = ""
    next=photo
    for i in range(2*n):
        next=next.get_next_in_gallery(gallery)
        if next:
            if i >= n:
                out += admin_thumbnail(next)
            else:
                out+=thumbnail(next)
        else:
            break

    return out

@register.simple_tag
def previous_n_in_gallery(photo, gallery, n):
    out = ""
    prev=photo
    for i in range(2*n):
        prev=prev.get_previous_in_gallery(gallery)
        if prev:
            if i >= n:
                out = admin_thumbnail(prev) + out
            else:
                out=thumbnail(prev)+out
        else:
            break
    return out

@register.simple_tag
def gallery_tree_list(photo):
    from photologue.models import Gallery
    title = photo.title
    (path, im) = os.path.split(title)
    if path=="" or im=="":
        return title
    treelist = path.split('/')
    out = ""
    reltitle = ""
    for i in range(len(treelist)):
        reltitle = os.path.join(reltitle, treelist[i])
        gallery = Gallery.objects.get(title_slug=slugify(reltitle))
        out += "<a href='%s'>%s</a>/"%(gallery.get_absolute_url(), treelist[i])
    return out+im

@register.simple_tag
def gallery_nav(photo):
    #out = photo.title + ' ' + photo.title_slug + str(photo.public_galleries())
    #(path,im) = os.path.split(photo.title)
    #from photologue.models import Gallery
    #thisphoto=Photo.objects.get(title_slug=photo.title_slug)
    #gallery = Gallery.objects.get(title_slug=slugify(path))
    gallery = photo.parentGallery()
    out = previous_n_in_gallery(photo, gallery,2) + '&nbsp;' + next_n_in_gallery(photo, gallery, 2)
    #out = previous_n_in_gallery(photo, gallery, 3)
    #out+=str(thisphoto.public_galleries())
    #[out.join(g.title) for g in photo.public_galleries()]
    return out

@register.simple_tag
def parent(photo):
    return photo.parentGallery()
#<ol>
#{% for gallery in object.public_galleries %}
#    <li>{%previous_n_in_gallery object gallery 3%}<a href="{{ gallery.get_absolute_url }}">{{ gallery.title }}</a> {%next_n_in_gallery object gallery 3%}</li>
#{% endfor %}
#</ol>

@register.simple_tag
def subgallery_name(gallery):
    (parent, sub) = os.path.split(gallery.title)
    return sub
    
